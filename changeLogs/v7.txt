GDevelop + Windsurf Codex — v7 升级提示（在 v6/v6.1 基础上自动执行，先读取升级报告）
================================================================================
仓库：https://github.com/eat-chestnut/game
前置：已存在 v6 与 v6.1（装备系统）版本。升级总结在 `V6_V6.1_UPGRADE_REPORT.md`（若缺则回退读取 `CHANGELOG.md` 的最近条目）。
目标：**自动读取并解析升级报告与现有源码**，先生成 v6→v6.1→v7 的“待改清单”，随后完成：
- 回归体检（含装备与旧技能/商店/波次/掉落/音频/暂停）
- 修复 v6.1 遗留 bug 与边界
- 完善装备系统（套装、负重、载具化：预设/筛选/锁定/批量操作）
- 新功能与可访问性优化
- QA 与性能优化
全程**禁止要求人工点击**；如实现与本提示冲突，请直接重构覆盖。

【自适应输入】
1) 第一步：读取并解析根目录 `V6_V6.1_UPGRADE_REPORT.md`。若不存在，读取 `CHANGELOG.md` 最近两个版本段落。
2) 从报告中抽取：Bugs/Issues、已完成/部分完成项、TODO/Known Limitations/Next。
3) 生成 “v6.1→v7 待改清单”（按严重度/优先级排序），逐项落实。对报告未提及但在代码中可复现的问题，也要补充修复。

【执行模式】
- 全自动创建/修改/覆盖 场景、对象、External Events、资源与变量；
- 每轮打印：变更清单 + 自测报告（FPS 分位与断言结果）+ 与报告映射的完成度；若仍有 TODO，下一轮自动完成；
- skill_config.json / equipment_config.json / 存档结构如与实现不一致 → 启用“适配层 + 迁移脚本”，并打印一次性兼容日志。

================================================================================
一、回归体检（必须保持正确的既有特性）
--------------------------------------------------------------------------------
1) 攻速/冷却：fireRate 初始 2.0s；冷却使用 TimeDelta；fireRate ≥ minFireRate（默认 0.60s 或商店/装备 cap 后的新下限，取更高者）。
2) 形态乘区：连发 vs 散射 的本次总伤 `totalMultiplier = max(multi_total, scatter_total)`，**不相乘**。
3) 分裂：`isSplitChild=true` 的小弹不继承形态技能（连发/散射/穿透/反弹），仅继承数值乘区；主弹分裂 CD=30ms；小弹伤害= 60% × 数值乘区（受装备 splitChildPct 加成上限约束）。
4) 穿透/反弹：穿透后伤害 ×0.90（最低 50% 初伤）；反弹后伤害 ×0.85（±4° 随机）。
5) 升级暂停：面板弹出 → `isPaused=true` 冻结计时器/生成；选中技能后恢复；UI 不穿透/不重影。
6) 波次：`WaveTimer` 每 30s 触发；`enemySpeed×1.04 / enemyHP×1.06 / spawnRate×0.97`（地板 0.30s）。
7) 泄漏防护：子弹寿命 ≤2s；分裂弹总数 ≤50；同屏敌 ≤80。
8) 音频：首次交互初始化 AudioContext；前后台切换能恢复 BGM；设置滑条实时生效与持久化。
9) 数据：`SkillState/level/coins/音量/最高分/装备/残片` 持久化；旧版存档迁移成功。

================================================================================
二、v6.1 常见遗留与本次修复（结合报告逐条对照）
--------------------------------------------------------------------------------
A. 计时器/暂停嵌套
- 统一 `PauseSystem` 为“引用计数型暂停”：面板/教程/Boss/失焦各自 +1/-1；任何一方存在暂停计数则冻结生成与计时器。
- 确保 `fireCooldown/NearestTimer/WaveTimer/BossSkillTimer` 只有一份；增加“守护事件”去重。

B. 装备系统边界
- **攻速上限**：装备的 `fireRatePct` 在合并后，必须满足 `fireRate >= max(minFireRate, capFireRate)`；硬上限不得突破。
- **叠加上限**：装备 `damageMulPct` 总和 ≤ 30%；`penetrationPlus ≤ 3`；`reboundPlus ≤ 2`；`splitChildBonus ≤ +30%`。
- **掉落/背包**：Inventory 满时弹出提示并提供“批量分解”；重复 itemId 去重；写入 `powerScore` 排序字段；AutoSalvage 安全检查（防止误分高稀有）。
- **锻造/重铸**：限制速点导致的重复结算与碎片负值；重铸保留锁定词缀（见 v7 新功能）。

C. JSON/i18n 容错
- equipment_config/skill_config 缺字段 → 回退默认；i18n 缺键回退中文；在 QA 中打印缺失率。

D. 移动端/可访问性
- 交互命中区 ≥44px；长按 200ms 防抖；高对比/色盲模式覆盖装备 UI；游戏手柄焦点导航完整闭环。

E. 对象池与内存
- 子弹/敌人/无人机/掉落物采用对象池或屏外复位；60s 历史窗口内跟踪池命中率。

================================================================================
三、v7 新功能
--------------------------------------------------------------------------------
1) **装备套装（Set）**：
   - 在 `equipment_config.json` 新增 `sets`：每件装备可带 `setId`；满足 (2)/(4) 件时激活 `set2`/`set4` 奖励（仅数值类）
   - 推荐示例：
     - Hunter(猎手)：set2=子弹速度+10%，set4=穿透+1且穿透衰减×0.92（最低仍50%）；
     - Arcanist(奥术)：set2=总伤+8%，set4=AOE 伤+12%、冷却-10%。
   - HUD 显示“套装进度”与激活效果；与技能/装备上限同样受 clamp 与“不破坏硬约束”。

2) **装备预设/换装（Loadouts）**：
   - 3 套预设：保存 Equipped 状态与排序/筛选选项；在主菜单或局内安全点快速切换；
   - 切换时重新计算融合数值并刷新 HUD。

3) **装备筛选/排序/搜索 + 批量操作**：
   - 过滤条件：槽位/稀有/词缀关键字/是否锁定；排序：powerScore/rarity/slot；支持多选批量分解或锁定；
   - 文本搜索支持 i18n 关键字映射。

4) **词缀锁定重铸（Reroll with Locks）**：
   - 在背包 UI 为每个词缀提供“锁定”开关；`rerollCost` 基础×锁定数（例如基数 2 → 锁 1 条需 4，锁 2 条需 8）；
   - 只重摇未锁定的词缀；保留稀有度与槽位。

5) **掉落高亮与战利品提示**：
   - 稀有及以上显示落地光柱、拾取吐司；可在设置中关闭。

6) **平衡补强**：
   - 无人机：新增“集中/分散”两种射击节奏（QA 可切换）；
   - 护盾：击穿后的 0.5s 无敌帧对 Boss 弹幕生效但对接触伤害减半；
   - AOE：Boss 目标伤害 ×0.75 的规则保持不变。

================================================================================
四、配置扩展（自动补全 equipment_config.json）
--------------------------------------------------------------------------------
- 新增：
  "sets": {
    "Hunter": {
      "name": {"zh":"猎手","en":"Hunter"},
      "set2": {"bulletSpeedPct": 10},
      "set4": {"penetrationPlus": 1, "penetrationDecayMul": 0.92}
    },
    "Arcanist": {
      "name": {"zh":"奥术","en":"Arcanist"},
      "set2": {"damageMulPct": 8},
      "set4": {"aoeScalePct": 12, "aoeCooldownPct": -10}
    }
  },
  "ui": { "maxBag": 24, "autoSalvage": ["Common"], "lootBeams": true },
  "loadouts": { "count": 3 }
- 缺失即创建；已有时不破坏现有字段，仅追加。

================================================================================
五、事件与代码要点（按需覆盖旧实现）
--------------------------------------------------------------------------------
EquipPanel（External）：
- 背包网格、多选、批量分解/锁定、搜索筛选；
- Reroll with Locks：消耗 = 基础 rerollCost × 锁定条目数；
- 穿戴/卸下后调用 `RecalcAllEquipEffects()` 与 HUD 更新；
- Loadouts：保存/读取预设；
- Set 套装：计算激活与数值合并；将结果写入装备融合缓存。

融合计算（在变动时重算缓存）：
- 顺序：基础 → 技能/商店 → 装备 affix → 套装 bonus → clamp（攻速/穿透/反弹/分裂）→ 形态（连发/散射 max）→ 输出 ShotPattern + 每弹伤害；
- 写入：`EquipMerged`（结构体），供 AutoAim/SkillSystem/UI 读取。

QA/Dev：
- 对象池命中率与内存曲线；
- 掉落 1000 次统计：稀有度概率、powerScore 分布；
- Reroll with Locks 成本与收益统计；
- Loadouts 切换性能、HUD 刷新延迟。

================================================================================
六、性能优化（v7）
--------------------------------------------------------------------------------
- 背包分页/虚拟滚动；
- 套装与融合缓存：仅在装备/技能变化时重算；
- 粒子/光柱在低性能模式下降级；
- 贴图与字体资源按需加载。

================================================================================
七、自动断言（必须全部 PASS）
--------------------------------------------------------------------------------
- 攻速下限（0.60 或 cap 更高者）；
- 连发+散射使用 `max()`；
- 分裂子弹不再分裂且不继承形态技能；
- 穿透/反弹衰减与 clamp 生效；
- 装备乘区 ≤30%，穿透≤3、反弹≤2、splitChildBonus≤+30%；
- 套装加成为数值类且不突破硬约束；
- Loadouts 读写成功且切换后数值一致；
- Reroll with Locks 成本计费正确、仅重摇未锁定条；
- 背包满时给予批量分解入口且不丢失物品；
- 1000 次掉落统计符合配置概率（误差在±3% 以内）；
- 对象池命中率≥70%（低性能模式可放宽到≥60%）。

================================================================================
八、输出（每轮必须打印）
--------------------------------------------------------------------------------
1) 变更清单：新增/修改/覆盖的场景、对象、External、变量与关键事件；
2) 自测报告：
   - QA：Spawn50 / LevelUpTo10 / SpreadTest / 压力测试 / 触摸连点 / RNG 重放 / 掉落统计 / Reroll 成本 / 对象池命中率 的 avg/p95 FPS 与指标；
   - 存档迁移结果（成功/失败与原因）；
   - 与 `V6_V6.1_UPGRADE_REPORT.md` 对照的完成度表；
3) 若仍有 TODO → 列出并在下一轮自动完成。

================================================================================
九、CHANGELOG & 版本自动化（若存在则启用）
--------------------------------------------------------------------------------
- 若根目录存在 `CHANGELOG.template.md` 与 `Codex_Changelog_AutoPrompt.txt`，执行完自动更新 `CHANGELOG.md` 与 `VERSION`，并以 Conventional Commits 提交。

（完）
